node{

    try {
    notifyBuild('STARTED')

    stage('Git Pull') {
        git branch: 'develop', url: 'https://github.com/takeyourseat/takeyourseatapi'
    }

    stage('MVN Compile Package') {
        def mvnHome = tool name: 'maven-3', type: 'maven'
        sh label: '', script: "${mvnHome}/bin/mvn clean install"
    }

    stage('Sonar-scanner') {
      def mvnHome = tool name: 'maven-3', type: 'maven'
      withSonarQubeEnv('sonar-6') {
        sh "${mvnHome}/bin/mvn sonar:sonar"
      }
    }

    stage('Run Container on Dev Server') {
        sh "docker ps && docker ps -a && docker images && docker-compose ps"
        sh "docker-compose stop -t 5"
        sh "docker-compose rm -f"
        // sh "docker system prune -f"
        sh "docker-compose build"
        sh "docker-compose up -d"
        sh "docker-compose ps && docker ps && docker ps -a && docker images"
        sh "pwd"
    }


    } catch (e) {
         // If there was an exception thrown, the build failed
         currentBuild.result = "FAILED"
         throw e
    } finally {
         // Success or failure, always send notifications
         notifyBuild(currentBuild.result)
     }
    }

    def notifyBuild(String buildStatus = 'STARTED') {
      // build status of null means successful
      buildStatus =  buildStatus ?: 'SUCCESSFUL'

      // Default values
      def colorName = 'RED'
      def colorCode = '#FF0000'
      def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
      def summary = "${subject} (${env.BUILD_URL})"
      def details = """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
         <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>"""

      // Override default values based on build status
      if (buildStatus == 'STARTED') {
         color = 'YELLOW'
         colorCode = '#FFFF00'
      } else if (buildStatus == 'SUCCESS || SUCCESSEFUL') {
         color = 'GREEN'
         colorCode = '#00FF00'
      } else {
         color = 'RED'
         colorCode = '#FF0000'
      }

      // Send notifications
      slackSend (color: colorCode, message: summary)

}