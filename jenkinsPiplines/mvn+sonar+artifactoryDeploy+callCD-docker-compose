node{

    try {
    notifyBuild('STARTED')

    def server = Artifactory.server 'artifactory-6'
    def rtMaven = Artifactory.newMavenBuild()
    def buildInfo

    stage('Git Pull') {
        git branch: 'develop', url: 'https://github.com/takeyourseat/takeyourseatapi'
    }

    stage ('Artifactory configuration') {
        rtMaven.tool = 'maven-3' // Tool name from Jenkins configuration
        rtMaven.deployer releaseRepo: 'jenkins-takeyourseat-develop-release-local', snapshotRepo: 'jenkins-takeyourseat-develop-snapshots-local', server: server
        buildInfo = Artifactory.newBuildInfo()
        buildInfo.env.capture = true
    }

    stage('MVN Install ') {
    rtMaven.run pom: '.' , goals: 'clean install -U', buildInfo: buildInfo
    }

    stage('Sonar-scanner') {
      def mvnHome = tool name: 'maven-3', type: 'maven'
      withSonarQubeEnv('sonar-6') {
        sh "${mvnHome}/bin/mvn sonar:sonar"
      }
    }

     stage ('Publish build info') {
        server.publishBuildInfo buildInfo
    }

     stage ('Call DEVELOP-CD job') {

        build job: 'DEVELOP_capostol-CD-docker-compose_Takeyourseat_Pipeline', wait: false
    }

  } catch (e) {
     // If there was an exception thrown, the build failed
     currentBuild.result = "FAILED"
     throw e
  } finally {
     // Success or failure, always send notifications
     notifyBuild(currentBuild.result)
  }
 }

     def notifyBuild(String buildStatus = 'STARTED') {
      // build status of null means successful
      buildStatus =  buildStatus ?: 'SUCCESSFUL'

     // Default values
      def colorName = 'RED'
      def colorCode = '#FF0000'
      def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
      def summary = "${subject} (${env.BUILD_URL})"
      def details = """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
         <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>"""

      // Override default values based on build status
      if (buildStatus == 'STARTED') {
         color = 'YELLOW'
         colorCode = '#FFFF00'
      } else if (buildStatus == 'SUCCESSFUL') {
         color = 'GREEN'
         colorCode = '#00FF00'
      } else {
         color = 'RED'
         colorCode = '#FF0000'
      }

     // Send notifications
     slackSend (color: colorCode, message: summary)

}